@model Business.ViewModels.ProductViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Admin/_Layout.cshtml";
}
<link href="~/Content/products-content/product-page.css" rel="stylesheet" />
<h2>Update Product Details</h2>


@using (Html.BeginForm("Edit", "Products", null, FormMethod.Post,
                            new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => Model.Product.Product_Id)
        <div class="form-group">
            @Html.LabelFor(model => Model.Product.Category_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => Model.Product.Category_Id, ViewBag.Categories as SelectList, new { @class = "form-control col-xs-8 col-sm-4 col-md-4" })
                @Html.ValidationMessageFor(model => Model.Product.Category_Id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => Model.Product.Subcategory_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => Model.Product.Subcategory_Id, ViewBag.Subcategories as SelectList, new { @class = "form-control col-xs-8 col-sm-4 col-md-4" })
                @Html.ValidationMessageFor(model => Model.Product.Subcategory_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.Product.Product_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.Product.Product_Name, new { htmlAttributes = new { @class = "form-control col-xs-8 col-sm-4 col-md-4" } })
                @Html.ValidationMessageFor(model => Model.Product.Product_Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <aside class="col-sm-5">
            <article class="gallery-wrap">
                <div class="img-small-wrap">
                    @if (Model.Product.productImages.Count != 0)
                    {
                        <div class="primary-img">
                            <a href="#">
                                <img src="@Model.PrimaryProduct_Image.ConvertedProductImage" class="product-image" id="my-primary-image">
                                @Html.HiddenFor(modelItem => Model.PrimaryProduct_Image.ConvertedProductImage)
                                @Html.HiddenFor(modelItem => Model.PrimaryProduct_Image.Image_Id)
                                @Html.HiddenFor(modelItem => Model.PrimaryProduct_Image.Product_Id)
                                @Html.HiddenFor(modelItem => Model.PrimaryProduct_Image.Image)
                            </a>
                        </div>
                    }
                </div> <!-- slider-product.// -->
                <div class="img-small-wrap">
                    @* Loop images per product *@
                    @if (Model.Product.productImages.Count != 0)
                    {
                        foreach (var image in Model.Product.productImages)
                        {
                            <div class="item-gallery img-list">

                                <img src="@image.ConvertedProductImage" id="myImg" />
                                @Html.HiddenFor(Model => image.ConvertedProductImage)
                            </div>
                        }
                    }
                </div> <!-- slider-nav.// -->
            </article> <!-- gallery-wrap .end// -->
        </aside>
        <div class="form-group">
            <div class="col-md-10">
                <label for="file">Upload Image:</label>
                <input type="file" name="file" id="file" style="width: 100%;" />
                @*<input type="submit" value="Upload" class="submit" />*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.Product.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.Product.Price, new { htmlAttributes = new { @class = "form-control col-xs-8 col-sm-4 col-md-4" } })
                @Html.ValidationMessageFor(model => Model.Product.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => Model.Product.QuantityPerUnit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.Product.QuantityPerUnit, new { htmlAttributes = new { @class = "form-control col-xs-8 col-sm-4 col-md-4" } })
                @Html.ValidationMessageFor(model => Model.Product.Price, "", new { @class = "text-danger" })
            </div>
        </div>



        @Html.HiddenFor(model => Model.Product.Date_Added)
        @Html.HiddenFor(model => Model.Product.Date_Modified)
        @Html.HiddenFor(model => Model.Product.Date_Removed)
        @Html.HiddenFor(model => Model.Product.Subcategory_Id)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

